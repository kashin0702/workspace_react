{
	// Place your React 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"reactDemo": {
		"prefix": "createReactSnip",
		"body": [
			"<!DOCTYPE html>",
			"<html lang=\"en\">",
			"<head>",
			"  <meta charset=\"UTF-8\">",
			"  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">",
			"  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
			"  <title>Document</title>",
			"</head>",
			"<body>",
			"  <div id=\"root\"></div>",
			"  <script src=\"lib/react.js\"></script>",
			"  <script src=\"lib/react-dom.js\"></script>",
			"  <script src=\"lib/babel.js\"></script>",
			"",
			"  <script type=\"text/babel\">",
			"    class App extends React.Component {",
			"      constructor () {",
			"        super()",
			"        this.state = {",
			"          movies: ['星际穿越', '霍比特人', '指环王']",
			"        }",
			"      }",
			"      render () {",
			"        let movieArr = this.state.movies.map(item => {",
			"          {/*循环时要绑定key,否则会报警*/}",
			"          return <li key={item}>{item}</li>",
			"        })",
			"        return (",
			"          <div>",
			"            <h2>电影列表</h2>",
			"            <ul>",
			"              {/*jsx大括号内支持传入数组*/}",
			"              {movieArr}",
			"            </ul>  ",
			"          </div>",
			"        )",
			"      }",
			"    }",
			"    const root = ReactDOM.createRoot(document.querySelector('#root'))",
			"    root.render(<App/>)",
			"  </script>",
			"</body>",
			"</html>"
		],
		"description": "reactDemo"
	},
	"mydemo": {
		"prefix": "reactdemo",
		"body": [
			"<!DOCTYPE html>",
			"<html lang=\"en\">",
			"<head>",
			"  <meta charset=\"UTF-8\">",
			"  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">",
			"  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
			"  <title>Document</title>",
			"</head>",
			"<body>",
			"  <div id=\"root\"></div>",
			"  <script src=\"lib/react.js\"></script>",
			"  <script src=\"lib/react-dom.js\"></script>",
			"  <script src=\"lib/babel.js\"></script>",
			"",
			"",
			"  <script type=\"text/babel\">",
			"    class App extends React.Component {",
			"      constructor () {",
			"        super()",
			"        this.state = {}",
			"      }",
			"      render () {",
			"        return (",
			"          <div></div>",
			"        )",
			"      }",
			"    }",
			"",
			"",
			"    const root = ReactDOM.createRoot(document.querySelector('#root'))",
			"    root.render(<App/>)",
			"  </script>",
			"</body>",
			"</html>"
		],
		"description": "mydemo"
	}
}